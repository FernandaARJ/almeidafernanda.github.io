name: Deploy Jekyll + Pagefind

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
      - uses: actions/checkout@v4

      - name: Setup Ruby (Jekyll)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Install gems
        run: bundle install --jobs 4 --retry 3

      - name: Build Jekyll
        run: bundle exec jekyll build --trace

      # (Opcional) Purge CSS â€“ sÃ³ roda se houver package.json e config
      - name: Setup Node
        if: ${{ hashFiles('package.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node deps (optional)
        if: ${{ hashFiles('package.json') != '' }}
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      - name: Purge unused CSS (optional)
        if: ${{ hashFiles('purgecss.config.js') != '' }}
        run: |
          npx purgecss \
            --css _site/assets/*.css \
            --content "_site/**/*.html" \
            --output _site/assets/

      - name: Build Pagefind index ðŸ”Ž
        run: npx pagefind --site _site --output-path _site/pagefind

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

          folder: _site
